int x;
int y;
int distancy;

def void composto(int c1, int p1, int type, int c2, int p2){
  if(c1 == 1){ // FRENTE
    if(c2 == 1){ // FRENTE
      if(type == 1){ // ENTAO
        frente(p1);
        frente(p2);
      }
      if(type == 2) { // APOS
        frente(p1);
        frente(p2);
      }
    }

    if(c2 == 2){ // TRAS
      if(type == 1){ // ENTAO
        tras(p1);
        frente(p2);
      }
      if(type == 2) { // APOS
        frente(p1);
        tras(p2);
      }
    }

    if(c2 == 3){ // ESQUERDA
      if(type == 1){ // ENTAO
        esquerda(p1);
        frente(p2);
      }
      if(type == 2) { // APOS
        frente(p1);
        esquerda(p2);
      }
    }

    if(c2 == 4){ // DIREITA
      if(type == 1){ // ENTAO
        direita(p1);
        frente(p1);
      }
      if(type == 2) { // APOS
        frente(p1);
        direita(p1);
      }
    }
  }



  if(c1 == 2){ // TRAS
    if(c2 == 1){ // FRENTE
      if(type == 1){ // ENTAO
        tras(p1);
        frente(p2);
      }
      if(type == 2) { // APOS
        frente(p1);
        tras(p2);
      }
    }

    if(c2 == 2){ // TRAS
      if(type == 1){ // ENTAO
        tras(p1);
        tras(p2);
      }
      if(type == 2) { // APOS
        tras(p1);
        tras(p2);
      }
    }

    if(c2 == 3){ // ESQUERDA
      if(type == 1){ // ENTAO
        tras(p1);
        frente(p2);
      }
      if(type == 2) { // APOS
        frente(p1);
        tras(p2);
      }
    }

    if(c2 == 4){ // DIREITA
      if(type == 1){ // ENTAO
        tras(p1);
        frente(p1);
      }
      if(type == 2) { // APOS
        frente(p1);
        tras(p1);
      }
    }
  }

  if(c1 == 3){ // ESQUERDA
    if(c2 == 1){ // FRENTE
      if(type == 1){ // ENTAO
        esquerda(p1);
        frente(p2);
      }
      if(type == 2) { // APOS
        frente(p1);
        esquerda(p2);
      }
    }

    if(c2 == 2){ // TRAS
      if(type == 1){ // ENTAO
        esquerda(p2);
        tras(p1);
      }
      if(type == 2) { // APOS
        tras(p1);
        esquerda(p2);
      }
    }

    if(c2 == 3){ // ESQUERDA
      if(type == 1){ // ENTAO
        esquerda(p1);
        esquerda(p2);
      }
      if(type == 2) { // APOS
        esquerda(p1);
        esquerda(p2);
      }
    }

    if(c2 == 4){ // DIREITA
      if(type == 1){ // ENTAO
        tras(p1);
        frente(p2);
      }
      if(type == 2) { // APOS
        frente(p1);
        tras(p2);
      }
    }
  }

  if(c1 == 4){ // DIREITA
    if(c2 == 1){ // FRENTE
      if(type == 1){ // ENTAO
        direita(p1);
        frente(p2);
      }
      if(type == 2) { // APOS
        frente(p1);
        direita(p2);
      }
    }

    if(c2 == 2){ // TRAS
      if(type == 1){ // ENTAO
        direita(p2);
        tras(p1);
      }
      if(type == 2) { // APOS
        tras(p1);
        direita(p2);
      }
    }

    if(c2 == 3){ // ESQUERDA
      if(type == 1){ // ENTAO
        direita(p1);
        esquerda(p2);
      }
      if(type == 2) { // APOS
        esquerda(p1);
        direita(p2);
      }
    }

    if(c2 == 4){ // DIREITA
      if(type == 1){ // ENTAO
        direita(p1);
        direita(p2);
      }
      if(type == 2) { // APOS
        direita(p1);
        direita(p2);
      }
    }
  }
}

def void frente(int a){
  y = y + a;
}

def void tras(int a){
  y = y - a;
}

def void esquerda(int a){
  x = x - a;
}

def void direia(int a){
  x = x + a;
}

def void main(){

  x = 0;
  y = 0;
  distancy = 0;


  //comandos, 1 = frente
  //comandos, 2 = tras
  //comandos, 3 = esquerda
  //comandos, 4 = direita

  //tipos, 1 = entao
  //tipos, 2 = apos

  //FRENTE 10 ENTAO ESQUERDA 20
  composto(1, 10, 1, 3, 20);

  //DIREITA 30 APOS ESQUERDA 20
  composto(4, 10, 1, 3, 20);

  //FRENTE 70
  frente(70);

  //DIREITA 10
  direita(10);

  //TRAS 20
  tras(20);

  //x e y contem as coorddenadas finais
  //basta somar valor absoluto para obter a distancia

  x = abs(x);
  y = abs(y);

  distancy = x + y;

  print_str("DISTANCIA PERCORRIDA: ");
  print_str(distancy);


}

def int abs(int a){
  if(a < 0){
   return -a;
  }
  else{
    return a;
  }
}